version: '3'

services:
  api:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=prod
      - DB_URI=mongodb://mongo:27017/family-planner
      - LOKI_URL=http://loki:3100
    networks:
      - curso-ddd
    volumes:
      - type: volume
        source: api_logs
        target: /app/logs
  
  mongo:
    image: mongo:4.4.6
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_DB_NAME=family-planner
    networks:
      - curso-ddd
    volumes:
      - type: volume
        source: MONGO_DATA
        target: /data/db
      - type: volume
        source: MONGO_CONFIG
        target: /data/configdb

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/loki-config.yaml
      - ./data/loki/index:/loki/index
      - ./data/loki/chunks:/loki/chunks
      - ./data/loki/boltdb-cache:/loki/boltdb-cache
    command: -config.file=/etc/loki/loki-config.yaml -config.expand-env=true
    networks:
      - curso-ddd
  
  prometheus:
    image: prom/prometheus:v2.46.0
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - curso-ddd
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - curso-ddd



networks:
  curso-ddd:
    driver: bridge

volumes:
  api_logs:
    name: api_logs 
  MONGO_DATA:
    name: mongo_data
  MONGO_CONFIG:
    name: mongo_config 
  grafana-data:
    name: grafana-data
version: '3'

services:
  monolito:
    build:
      context: monolito/
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=prod
      - DB_URI=mongodb://mongo:27017/family-planner
      - USERS_MICRO=http://micro-users:3001
      - LOKI_URL=http://loki:3100
    networks:
      - curso-ddd
    volumes:
      - type: volume
        source: api_logs
        target: /app/logs
    
  micro-users:
    build:
      context: users/
      dockerfile: Dockerfile
    ports:
      - "4001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=prod
      - DB_URI=mongodb://mongo:27017/users
      - LOKI_URL=http://loki:3100
      - RABBITMQ_URL=amqp://guess:guess@rabbitmq:5672/
      - EXCHANGE='curso-ddd'
    networks:
      - curso-ddd
    volumes:
      - type: volume
        source: api_logs
        target: /app/logs

  micro-notification:
    build:
      context: notifications/
      dockerfile: Dockerfile
    ports:
      - "4002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=prod
      - DB_URI=mongodb://mongo:27017/users
      - LOKI_URL=http://loki:3100
      - RABBITMQ_URL=amqp://guess:guess@rabbitmq:5672/
      - EXCHANGE='curso-ddd'
    networks:
      - curso-ddd
    volumes:
      - type: volume
        source: api_logs
        target: /app/logs

  micro-vehicles:
    build:
      context: vehicles/
      dockerfile: Dockerfile
    ports:
      - "4004:3004"
    environment:
      - PORT=3004
      - NODE_ENV=prod
      - DB_URI=mongodb://mongo:27017/users
      - LOKI_URL=http://loki:3100
      - RABBITMQ_URL=amqp://guess:guess@rabbitmq:5672/
      - EXCHANGE='curso-ddd'
    networks:
      - curso-ddd
    volumes:
      - type: volume
        source: api_logs
        target: /app/logs

networks:
  curso-ddd:
    driver: bridge

volumes:
  api_logs:
    name: api_logs 